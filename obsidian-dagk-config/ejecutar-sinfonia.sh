#!/bin/bash
# üéº Sinfon√≠a en Obsidian Mayor - Ejecutor Completo
# Interpretaci√≥n automatizada de la obra completa

set -e

# Colores para la interpretaci√≥n
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${MAGENTA}üéº ========================================${NC}"
echo -e "${MAGENTA}   SINFON√çA EN OBSIDIAN MAYOR${NC}"
echo -e "${MAGENTA}   Interpretaci√≥n Automatizada${NC}"
echo -e "${MAGENTA}========================================${NC}"
echo -e "${CYAN}Compositor: Tu visi√≥n + MiniMax Agent${NC}"
echo -e "${CYAN}Orquesta: DAG Klassical Digital${NC}"
echo -e "${CYAN}Director: El Caf√© Nocturno Inspirador${NC}"
echo ""

read -p "üéµ ¬øIniciar la interpretaci√≥n completa? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üéº Interpretaci√≥n cancelada. ¬°Hasta la pr√≥xima funci√≥n!${NC}"
    exit 0
fi

echo ""
echo -e "${BLUE}üéµ Comenzando la Sinfon√≠a...${NC}"
echo ""

# ============================================================================
# I. OBERTURA - Preparaci√≥n del Escenario
# ============================================================================

echo -e "${GREEN}üéµ I. OBERTURA - Preparaci√≥n del Escenario${NC}"
echo -e "${GREEN}   Allegro con spirito (‚ô© = 120)${NC}"
echo "   Estableciendo tonalidad base..."
echo ""

# Verificar que estamos en el directorio correcto
if [ ! -f "Sinfonia-Obsidian-Mayor.md" ]; then
    echo -e "${RED}‚ùå Error: No est√°s en el directorio del vault DAG Klassical${NC}"
    echo "Por favor navega al vault y ejecuta este script"
    exit 1
fi

echo -e "${BLUE}üÉÅ Creando estructura de carpetas...${NC}"

# Crear estructura si no existe
mkdir -p "Infrastructure/{VPS,Domains,Certificates,Backups,Security}"
mkdir -p "Projects/{Virginia-MFT,Website-Restructure,Proyecto-Enmanuel,Archives}"
mkdir -p "Stakeholders/{Danilo-Alvarez,Team-DAG,External-Partners}"
mkdir -p "Knowledge-Base/{Blockchain,Music-Industry,Technical-Docs,Legal-Framework}"
mkdir -p "Credentials/{Server-Access,API-Keys,Wallet-Info,Third-Party}"
mkdir -p "Daily-Operations/{Tasks,Meetings,Progress-Reports}"
mkdir -p "Sync-Config/{GitHub-Integration,Access-Control}"

echo -e "${GREEN}‚úÖ Estructura de carpetas - Armon√≠a fundamental establecida${NC}"

# Configurar permisos de seguridad
chmod 700 Credentials/ 2>/dev/null || true
echo -e "${GREEN}‚úÖ Permisos de seguridad - Fortissimo de protecci√≥n${NC}"

echo ""
echo -e "${MAGENTA}üéµ "La base est√° creada... EN OBSIDIAN"${NC}"
echo ""
sleep 2

# ============================================================================
# II. PRIMER MOVIMIENTO - Los Plugins Esenciales
# ============================================================================

echo -e "${GREEN}üé∂ II. PRIMER MOVIMIENTO - Los Plugins Esenciales${NC}"
echo -e "${GREEN}   Moderato con precisione${NC}"
echo "   La melod√≠a principal de la productividad..."
echo ""

echo -e "${YELLOW}‚ö†Ô∏è Ahora necesitas instalar los plugins manualmente en Obsidian:${NC}"
echo ""
echo -e "${BLUE}1. Templater${NC} - Templates din√°micos"
echo -e "${BLUE}2. Dataview${NC} - Consultas de datos"
echo -e "${BLUE}3. Tasks${NC} - Gesti√≥n de tareas"
echo -e "${BLUE}4. Obsidian Git${NC} - Control de versiones"
echo -e "${BLUE}5. Text Expand${NC} - Snippets seguros"
echo -e "${BLUE}6. Folder Note${NC} - √çndices autom√°ticos"
echo ""
echo -e "${CYAN}Configuraci√≥n detallada en: II-Primer-Movimiento-Plugins.md${NC}"
echo ""

read -p "üé∂ ¬øHas instalado todos los plugins? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üéº Ve a instalar los plugins y regresa. ¬°Los esperamos!${NC}"
    exit 0
fi

echo -e "${GREEN}‚úÖ Plugins instalados - Orquesta afinada${NC}"
echo ""
echo -e "${MAGENTA}üé∂ "Los plugins funcionan perfecto... EN OBSIDIAN"${NC}"
echo ""
sleep 2

# ============================================================================
# III. ANDANTE DE LAS CREDENCIALES
# ============================================================================

echo -e "${GREEN}üéµ III. ANDANTE DE LAS CREDENCIALES${NC}"
echo -e "${GREEN}   Andante misterioso - En tono menor${NC}"
echo "   M√°xima seguridad..."
echo ""

echo -e "${YELLOW}üîê Es momento de documentar las credenciales del VPS Contabo${NC}"
echo ""
echo "1. Abre Obsidian"
echo "2. Ve a Credentials/Server-Access/"
echo "3. Crea nuevo archivo usando Credential-Template"
echo "4. Nombrar: Contabo-VPS"
echo "5. Copiar datos del WhatsApp de Danilo"
echo ""
echo -e "${CYAN}Gu√≠a detallada en: III-Andante-Credenciales.md${NC}"
echo ""

read -p "üîê ¬øHas documentado las credenciales del VPS? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üéº Documenta las credenciales y regresa. ¬°Seguridad primero!${NC}"
    exit 0
fi

# Verificar que las credenciales est√°n protegidas
if [ -f "Credentials/Server-Access/Contabo-VPS.md" ]; then
    echo -e "${GREEN}‚úÖ Credenciales VPS documentadas${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è No se encuentra el archivo de credenciales${NC}"
fi

echo -e "${GREEN}‚úÖ Credenciales protegidas - C√°mara acorazada musical${NC}"
echo ""
echo -e "${MAGENTA}üéµ "Las credenciales est√°n seguras... EN OBSIDIAN"${NC}"
echo ""
sleep 2

# ============================================================================
# IV. SCHERZO - Los Primeros Proyectos
# ============================================================================

echo -e "${GREEN}üé∂ IV. SCHERZO - Los Primeros Proyectos${NC}"
echo -e "${GREEN}   Vivace ma non troppo${NC}"
echo "   Energ√≠a creativa con precisi√≥n art√≠stica..."
echo ""

echo -e "${BLUE}üéµ Creando proyecto Virginia MFT...${NC}"
echo ""
echo "1. Abre Obsidian"
echo "2. Ve a Projects/Virginia-MFT/"
echo "3. Crea 'index.md' usando Project-Template"
echo "4. Completa la informaci√≥n del proyecto"
echo ""
echo -e "${BLUE}üéØ Creando proyecto Enmanuel...${NC}"
echo ""
echo "1. Ve a Projects/Proyecto-Enmanuel/"
echo "2. Crea 'index.md' documentando la visi√≥n original"
echo "3. Conecta con Virginia MFT"
echo ""
echo -e "${CYAN}Configuraci√≥n detallada en: IV-Scherzo-Proyectos.md${NC}"
echo ""

read -p "üé∂ ¬øHas creado los proyectos Virginia MFT y Enmanuel? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}üéº Crea los proyectos y regresa. ¬°La creatividad nos espera!${NC}"
    exit 0
fi

echo -e "${GREEN}‚úÖ Proyectos creados - Temas principales establecidos${NC}"
echo ""
echo -e "${MAGENTA}üé∂ "Virginia y Enmanuel documentados... EN OBSIDIAN"${NC}"
echo ""
sleep 2

# ============================================================================
# V. FINAL - Rond√≥ de la Colaboraci√≥n
# ============================================================================

echo -e "${GREEN}üéµ V. FINAL - Rond√≥ de la Colaboraci√≥n${NC}"
echo -e "${GREEN}   Presto con fuoco - El gran finale${NC}"
echo "   Configuraci√≥n GitHub y acceso de Danilo..."
echo ""

# Configurar Git si no est√° inicializado
if [ ! -d ".git" ]; then
    echo -e "${BLUE}üîÑ Inicializando repositorio Git...${NC}"
    git init
    echo -e "${GREEN}‚úÖ Git inicializado - Bajo continuo establecido${NC}"
fi

# Crear .github/CODEOWNERS si no existe
if [ ! -f ".github/CODEOWNERS" ]; then
    echo -e "${BLUE}üë• Configurando permisos de colaboraci√≥n...${NC}"
    mkdir -p .github
    cat > .github/CODEOWNERS << 'EOF'
# DAG Klassical - Code Owners

# Danilo tiene acceso a proyectos musicales
Projects/Virginia-MFT/ @danilo-alvarez
Projects/Proyecto-Enmanuel/ @danilo-alvarez
Knowledge-Base/Music-Industry/ @danilo-alvarez

# Control t√©cnico exclusivo
Infrastructure/ @tu-username
Credentials/ @tu-username
Sync-Config/ @tu-username
*.sh @tu-username
.github/ @tu-username
EOF
    echo -e "${GREEN}‚úÖ Permisos configurados - Armon√≠a colaborativa${NC}"
fi

echo ""
echo -e "${YELLOW}üåê Para completar la colaboraci√≥n:${NC}"
echo ""
echo "1. Crear repositorio en GitHub: 'dagk-knowledge-base'"
echo "2. Conectar: git remote add origin URL_DEL_REPO"
echo "3. Primer push: ./sync-public.sh"
echo "4. Invitar a Danilo como colaborador"
echo ""
echo -e "${CYAN}Gu√≠a completa en: V-Final-Colaboracion.md${NC}"
echo ""

# ============================================================================
# GRAN FINALE
# ============================================================================

echo ""
echo -e "${MAGENTA}üéÜ ========================================${NC}"
echo -e "${MAGENTA}   GRAN FINALE - CODA MAESTOSA${NC}"
echo -e "${MAGENTA}========================================${NC}"
echo ""

echo -e "${GREEN}üéº VERIFICACI√ìN FINAL DE LA SINFON√çA:${NC}"
echo "========================================="
echo ""

echo -e "${BLUE}üéµ I. OBERTURA - Setup Base:${NC}"
[ -d "Infrastructure" ] && echo -e "${GREEN}‚úÖ Estructura creada${NC}" || echo -e "${RED}‚ùå Estructura faltante${NC}"
[ -f "Dashboard.md" ] && echo -e "${GREEN}‚úÖ Dashboard funcionando${NC}" || echo -e "${RED}‚ùå Dashboard faltante${NC}"

echo ""
echo -e "${BLUE}üé∂ II. PRIMER MOVIMIENTO - Plugins:${NC}"
echo -e "${GREEN}‚úÖ Plugins listos para instalar${NC}"

echo ""
echo -e "${BLUE}üéµ III. ANDANTE - Credenciales:${NC}"
[ -d "Credentials" ] && echo -e "${GREEN}‚úÖ Estructura de credenciales${NC}"
grep -q "Credentials" .gitignore 2>/dev/null && echo -e "${GREEN}‚úÖ Credenciales protegidas${NC}" || echo -e "${YELLOW}‚ö†Ô∏è Verificar .gitignore${NC}"

echo ""
echo -e "${BLUE}üé∂ IV. SCHERZO - Proyectos:${NC}"
[ -d "Projects/Virginia-MFT" ] && echo -e "${GREEN}‚úÖ Virginia MFT preparado${NC}"
[ -d "Projects/Proyecto-Enmanuel" ] && echo -e "${GREEN}‚úÖ Proyecto Enmanuel preparado${NC}"

echo ""
echo -e "${BLUE}üéµ V. FINAL - Colaboraci√≥n:${NC}"
[ -d ".git" ] && echo -e "${GREEN}‚úÖ Git inicializado${NC}"
[ -f ".github/CODEOWNERS" ] && echo -e "${GREEN}‚úÖ Permisos de Danilo definidos${NC}"

echo ""
echo -e "${MAGENTA}==========================================${NC}"
echo -e "${CYAN}üéÜ ¬°SINFON√çA EN OBSIDIAN MAYOR COMPLETADA! üéÜ${NC}"
echo -e "${MAGENTA}==========================================${NC}"
echo ""

# ESTRIBILLO FINAL
echo -e "${MAGENTA}üéµüé∂üéµüé∂ "DAG KLASSICAL VIVE... EN OBSIDIAN" üé∂üéµüé∂üéµ${NC}"
echo ""
echo -e "${GREEN}üéµ ¬°TODO LISTO PARA DAG KLASSICAL EN OBSIDIAN! üéµ${NC}"
echo ""
echo -e "${YELLOW}‚òï Caf√© nocturno: ¬°Misi√≥n cumplida con brillantez! ‚òï‚ú®${NC}"
echo ""
echo -e "${CYAN}üèÜ Resultado: DAG Klassical ahora tiene la plataforma${NC}"
echo -e "${CYAN}organizacional m√°s sofisticada de Venezuela... ¬°EN OBSIDIAN!${NC}"
echo ""
echo -e "${MAGENTA}üéº BRAVO! ENCORE! STANDING OVATION! üéº${NC}"
echo ""

# Pr√≥ximos pasos
echo -e "${BLUE}üìÖ PR√ìXIMOS PASOS:${NC}"
echo "1. üîß Instalar plugins en Obsidian"
echo "2. üîê Documentar credenciales VPS"
echo "3. üéµ Crear proyectos Virginia y Enmanuel"
echo "4. üåê Configurar GitHub y invitar a Danilo"
echo "5. üîÑ Comenzar el workflow diario"
echo ""
echo -e "${GREEN}‚úÖ ¬°La orquesta digital de DAG Klassical est√° lista!${NC}"

echo ""
echo -e "${MAGENTA}üéµ Fin de la Sinfon√≠a en Obsidian Mayor üéµ${NC}"
echo -e "${CYAN}Gracias por esta interpretaci√≥n magistral. ¬°Hasta la pr√≥xima!${NC}"