---
// Header Component - DAG Klassical (CSS CENTRALIZADO)
// Archivo: src/components/Header.astro
// Prop√≥sito: Header √∫nico con CSS centralizado y JavaScript embebido

// CSS Centralizado Importado - VERSI√ìN CORREGIDA
import '../styles/components/header-fixed.css';
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <!-- Logo y Brand -->
      <a href="/dag-www/" class="nav-brand">
        <img src="/dag-www/logo-dag.svg" alt="DAG Klassical" class="nav-logo" />
        <span class="text-gradient">DAG Klassical</span>
      </a>
      
      <!-- Men√∫ Principal (Desktop) -->
      <ul class="nav-menu" id="nav-menu">
        <!-- Inicio (Solo √≠cono con tooltip) -->
        <li class="nav-item">
          <a href="/dag-www/" class="nav-link icon-only" data-active={Astro.url.pathname === '/dag-www/' ? 'true' : 'false'} title="Inicio">
            <svg class="nav-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
              <polyline points="9,22 9,12 15,12 15,22"/>
            </svg>
            <span class="nav-text">Inicio</span>
          </a>
        </li>
        
        <!-- Contacto (Solo √≠cono con tooltip) -->
        <li class="nav-item">
          <a href="/dag-www/contacto/" class="nav-link icon-only" data-active={Astro.url.pathname === '/dag-www/contacto' ? 'true' : 'false'} title="Contacto">
            <svg class="nav-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            <span class="nav-text">Contacto</span>
          </a>
        </li>
        
        <!-- M√∫sica con Landing + Dropdown -->
        <li class="nav-item dropdown" data-section="M√∫sica">
          <span class="nav-link dropdown-toggle" data-active={Astro.url.pathname.startsWith('/dag-www/musica') ? 'true' : 'false'}>
            <span class="nav-text">M√∫sica</span>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <polyline points="6,9 12,15 18,9"></polyline>
            </svg>
          </span>
          <div class="dropdown-menu">
            <a href="/dag-www/musica/" class="dropdown-item landing-link">üéµ Ver Todo</a>
            <a href="/dag-www/musica/artistas/" class="dropdown-item">Artistas</a>
            <a href="/dag-www/musica/discografia/" class="dropdown-item">Discograf√≠a</a>
            <a href="/dag-www/musica/lanzamientos/" class="dropdown-item">Lanzamientos</a>
            <a href="/dag-www/musica/preventa/" class="dropdown-item">Preventa</a>
          </div>
        </li>
        
        <!-- Blockchain con Landing + Dropdown -->
        <li class="nav-item dropdown" data-section="Blockchain">
          <span class="nav-link dropdown-toggle" data-active={Astro.url.pathname.startsWith('/dag-www/blockchain') ? 'true' : 'false'}>
            <span class="nav-text">Blockchain</span>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <polyline points="6,9 12,15 18,9"></polyline>
            </svg>
          </span>
          <div class="dropdown-menu">
            <a href="/dag-www/blockchain/" class="dropdown-item landing-link">üîó Ver Todo</a>
            <a href="/dag-www/blockchain/digital-id/" class="dropdown-item">Digital ID</a>
            <a href="/dag-www/blockchain/tienda-nft/" class="dropdown-item">Tienda NFT</a>
            <a href="/dag-www/blockchain/tickets/" class="dropdown-item">Tickets</a>
            <a href="/dag-www/blockchain/polygon-networks/" class="dropdown-item">Polygon Networks</a>
          </div>
        </li>
        
        <!-- Noticias -->
        <li class="nav-item">
          <a href="/dag-www/noticias/" class="nav-link" data-active={Astro.url.pathname.startsWith('/dag-www/noticias') ? 'true' : 'false'}>
            <span class="nav-text">Noticias</span>
          </a>
        </li>
        
        <!-- Nosotros con Landing + Dropdown -->
        <li class="nav-item dropdown" data-section="Nosotros">
          <span class="nav-link dropdown-toggle" data-active={Astro.url.pathname.startsWith('/dag-www/nosotros') ? 'true' : 'false'}>
            <span class="nav-text">Nosotros</span>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <polyline points="6,9 12,15 18,9"></polyline>
            </svg>
          </span>
          <div class="dropdown-menu">
            <a href="/dag-www/nosotros/" class="dropdown-item landing-link">üë• Ver Todo</a>
            <a href="/dag-www/nosotros/dag-klassical/" class="dropdown-item">DAG Klassical</a>
            <a href="/dag-www/nosotros/danilo-alvarez/" class="dropdown-item">Danilo √Ålvarez</a>
            <a href="/dag-www/nosotros/equipo/" class="dropdown-item">Equipo</a>
            <a href="/dag-www/nosotros/terminos/" class="dropdown-item">T√©rminos</a>
          </div>
        </li>
      </ul>
      
      <!-- Acciones de navegaci√≥n -->
      <div class="nav-mobile-actions">
        <!-- Bot√≥n de B√∫squeda -->
        <button class="search-toggle" id="search-toggle" aria-expanded="false" aria-label="Abrir b√∫squeda">
          <svg class="search-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"/>
            <path d="M21 21l-4.35-4.35"/>
          </svg>
          <svg class="search-close-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" style="display: none;">
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
          </svg>
        </button>

        <!-- Men√∫ Hamburguesa -->
        <button class="nav-toggle" id="nav-toggle" aria-expanded="false" aria-label="Abrir men√∫">
          <svg class="hamburger-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <line x1="3" y1="6" x2="21" y2="6"/>
            <line x1="3" y1="12" x2="21" y2="12"/>
            <line x1="3" y1="18" x2="21" y2="18"/>
          </svg>
          <svg class="close-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" style="display: none;">
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
          </svg>
        </button>
      </div>
      
      <!-- Botones de Acci√≥n Desktop (Wallet + B√∫squeda) -->
      <div class="nav-actions">
        <a href="#" class="btn-wallet">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <rect x="1" y="3" width="20" height="16" rx="2"/>
            <path d="M1 7h20"/>
            <path d="M16 12h4"/>
          </svg>
          <span class="wallet-text">Wallet</span>
        </a>
        
        <!-- Bot√≥n de B√∫squeda (√çcono + Tooltip) -->
        <button class="btn-search" id="search-toggle-desktop" title="Buscar">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"/>
            <path d="M21 21l-4.35-4.35"/>
          </svg>
        </button>
      </div>

      <!-- Campo de B√∫squeda Desktop (Modal/Popup) -->
      <div class="search-container" id="search-container-desktop" style="display: none;">
        <div class="search-input-wrapper">
          <svg class="search-input-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"/>
            <path d="M21 21l-4.35-4.35"/>
          </svg>
          <input 
            type="text" 
            class="search-input" 
            placeholder="Buscar artistas, m√∫sica, contenido..."
            id="search-input-desktop"
          />
        </div>
        <div class="search-results" id="search-results">
          <!-- Resultados de b√∫squeda se mostrar√°n aqu√≠ -->
        </div>
      </div>
      
      <!-- Campo de B√∫squeda Mobile (Dropdown) -->
      <div class="search-container mobile-search-container" id="search-container-mobile" style="display: none;">
        <div class="search-input-wrapper">
          <svg class="search-input-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="11" cy="11" r="8"/>
            <path d="M21 21l-4.35-4.35"/>
          </svg>
          <input 
            type="text" 
            class="search-input" 
            placeholder="Buscar artistas, m√∫sica, contenido..."
            id="search-input-mobile"
          />
        </div>
        <div class="search-results" id="search-results-mobile">
          <!-- Resultados de b√∫squeda se mostrar√°n aqu√≠ -->
        </div>
      </div>
      
      <!-- Backdrop para modal de b√∫squeda desktop -->
      <div id="search-backdrop" style="display: none; position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.5); z-index: 1000;"></div>
    </nav>
  </div>
</header>


<script>
  // JavaScript para men√∫ hamburguesa y b√∫squeda - VERSI√ìN CORREGIDA
  const navToggle = document.getElementById('nav-toggle');
  const navMenu = document.getElementById('nav-menu');
  const searchToggle = document.getElementById('search-toggle');
  const searchContainer = document.getElementById('search-container');
  const searchContainerDesktop = document.getElementById('search-container-desktop');
  const searchContainerMobile = document.getElementById('search-container-mobile');
  const searchInputDesktop = document.getElementById('search-input-desktop');
  const searchInputMobile = document.getElementById('search-input-mobile');
  const searchInput = searchInputDesktop; // Para compatibilidad con funciones existentes
  
  if (navToggle && navMenu) {
    navToggle.addEventListener('click', () => {
      const isExpanded = navToggle.getAttribute('aria-expanded') === 'true';
      
      navToggle.setAttribute('aria-expanded', !isExpanded);
      navMenu.classList.toggle('active');
      navToggle.classList.toggle('active');
      
      // Cerrar b√∫squeda si est√° abierta
      if (searchContainer.classList.contains('active')) {
        searchContainer.classList.remove('active');
        searchToggle.setAttribute('aria-expanded', 'false');
        searchToggle.classList.remove('active');
      }
      
      // Prevenir scroll cuando men√∫ est√° abierto
      document.body.style.overflow = isExpanded ? '' : 'hidden';
    });
    
    // Cerrar men√∫ al hacer clic en un enlace
    const navLinks = navMenu.querySelectorAll('.nav-link');
    navLinks.forEach(link => {
      link.addEventListener('click', () => {
        navToggle.setAttribute('aria-expanded', 'false');
        navMenu.classList.remove('active');
        navToggle.classList.remove('active');
        document.body.style.overflow = '';
      });
    });
  }

  // Funcionalidad de b√∫squeda
  if (searchToggle && (searchContainer || searchContainerMobile)) {
    searchToggle.addEventListener('click', () => {
      const isExpanded = searchToggle.getAttribute('aria-expanded') === 'true';
      
      searchToggle.setAttribute('aria-expanded', !isExpanded);
      searchToggle.classList.toggle('active');
      
      // Usar contenedor m√≥vil para pantallas peque√±as
      const currentContainer = window.innerWidth <= 1024 ? searchContainerMobile : searchContainerDesktop;
      
      if (currentContainer) {
        currentContainer.classList.toggle('active');
      }
      
      // Cerrar men√∫ si est√° abierto
      if (navMenu && navMenu.classList.contains('active')) {
        navMenu.classList.remove('active');
        navToggle.classList.remove('active');
        document.body.style.overflow = '';
      }
      
      // Focus en input cuando se abre
      if (!isExpanded && searchInput) {
        setTimeout(() => searchInput.focus(), 100);
      }
    });
  }
  
  // Manejar visibilidad de contenedores seg√∫n breakpoint
  function updateSearchVisibility() {
    const isDesktop = window.innerWidth > 1024;
    
    // En desktop, el contenedor de b√∫squeda se controla por el bot√≥n de b√∫squeda
    if (searchContainerDesktop) {
      searchContainerDesktop.style.display = isDesktop ? 'none' : 'flex';
    }
    if (searchContainerMobile) {
      searchContainerMobile.style.display = !isDesktop ? 'block' : 'none';
    }
  }
  
  // Actualizar visibilidad al cargar y al redimensionar
  updateSearchVisibility();
  window.addEventListener('resize', updateSearchVisibility);
  
  // Manejar clic en bot√≥n de b√∫squeda desktop
  const searchToggleDesktop = document.getElementById('search-toggle-desktop');
  if (searchToggleDesktop) {
    searchToggleDesktop.addEventListener('click', () => {
      if (searchContainerDesktop) {
        const isCurrentlyVisible = searchContainerDesktop.style.display !== 'none';
        const backdrop = document.getElementById('search-backdrop');
        
        if (isCurrentlyVisible) {
          // Ocultar modal y backdrop
          searchContainerDesktop.style.display = 'none';
          if (backdrop) backdrop.style.display = 'none';
        } else {
          // Mostrar modal y backdrop
          searchContainerDesktop.style.display = 'block';
          if (backdrop) backdrop.style.display = 'block';
          
          // Focus en el input
          const searchInput = document.getElementById('search-input-desktop');
          if (searchInput) {
            searchInput.focus();
          }
        }
      }
    });
    
    // Cerrar modal al hacer clic en backdrop
    const backdrop = document.getElementById('search-backdrop');
    if (backdrop) {
      backdrop.addEventListener('click', () => {
        searchContainerDesktop.style.display = 'none';
        backdrop.style.display = 'none';
      });
    }
    
    // Cerrar modal al hacer clic fuera
    document.addEventListener('click', (e) => {
      if (searchContainerDesktop && searchContainerDesktop.style.display !== 'none') {
        const isClickInsideSearch = searchContainerDesktop.contains(e.target);
        const isClickOnToggle = searchToggleDesktop.contains(e.target);
        const isClickOnBackdrop = backdrop && backdrop.contains(e.target);
        
        if (!isClickInsideSearch && !isClickOnToggle && !isClickOnBackdrop) {
          searchContainerDesktop.style.display = 'none';
          if (backdrop) backdrop.style.display = 'none';
        }
      }
    });
    
    // Cerrar modal con tecla Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && searchContainerDesktop && searchContainerDesktop.style.display !== 'none') {
        searchContainerDesktop.style.display = 'none';
        if (backdrop) backdrop.style.display = 'none';
      }
    });
  }

  // Funcionalidad de dropdowns - Desktop (hover) y Mobile (click)
  const dropdowns = document.querySelectorAll('.dropdown');
  dropdowns.forEach(dropdown => {
    const toggle = dropdown.querySelector('.dropdown-toggle');
    
    if (toggle) {
      // Desktop: hover para abrir dropdown
      toggle.addEventListener('mouseenter', (e) => {
        if (window.innerWidth >= 1025) {
          dropdown.classList.add('desktop-open');
        }
      });
      
      // Cerrar dropdown al salir del mouse
      dropdown.addEventListener('mouseleave', (e) => {
        if (window.innerWidth >= 1025) {
          dropdown.classList.remove('desktop-open');
        }
      });
      
      // Mobile: click para toggle (cuando el men√∫ m√≥vil est√© abierto)
      toggle.addEventListener('click', (e) => {
        if (window.innerWidth <= 1024 && navMenu && navMenu.classList.contains('active')) {
          e.preventDefault();
          e.stopPropagation();
          
          // Cerrar otros dropdowns
          dropdowns.forEach(otherDropdown => {
            if (otherDropdown !== dropdown && otherDropdown.classList.contains('mobile-open')) {
              otherDropdown.classList.remove('mobile-open');
            }
          });
          
          // Toggle este dropdown
          dropdown.classList.toggle('mobile-open');
        }
      });
    }
  });

  // Cerrar dropdowns al hacer clic fuera
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.dropdown')) {
      dropdowns.forEach(dropdown => {
        dropdown.classList.remove('mobile-open');
      });
    }
  });

  // Mostrar nombre de secci√≥n activa en header m√≥vil
  function updateActiveSection() {
    if (window.innerWidth <= 1024 && navMenu && navMenu.classList.contains('active')) {
      const path = window.location.pathname;
      let activeSection = '';
      
      if (path.startsWith('/dag-www/musica')) activeSection = 'M√∫sica';
      else if (path.startsWith('/dag-www/blockchain')) activeSection = 'Blockchain';
      else if (path.startsWith('/dag-www/noticias')) activeSection = 'Noticias';
      else if (path.startsWith('/dag-www/nosotros')) activeSection = 'Nosotros';
      else if (path === '/dag-www/' || path === '/dag-www') activeSection = 'Inicio';
      else if (path.startsWith('/dag-www/contacto')) activeSection = 'Contacto';
      
      // Actualizar el header con la secci√≥n activa
      let activeHeader = navMenu.querySelector('.active-section-header');
      if (!activeHeader && activeSection) {
        activeHeader = document.createElement('div');
        activeHeader.className = 'active-section-header';
        activeHeader.textContent = activeSection;
        navMenu.insertBefore(activeHeader, navMenu.firstChild);
      } else if (activeHeader && activeSection) {
        activeHeader.textContent = activeSection;
        activeHeader.style.display = 'block';
      } else if (activeHeader && !activeSection) {
        activeHeader.style.display = 'none';
      }
    }
  }
  
  // Actualizar al abrir el men√∫
  if (navToggle) {
    navToggle.addEventListener('click', updateActiveSection);
  }

  // Cerrar b√∫squeda al hacer clic fuera
  document.addEventListener('click', (e) => {
    const isClickOnSearch = e.target.closest('.search-container') || e.target.closest('.search-toggle');
    
    if (!isClickOnSearch) {
      // Cerrar ambos contenedores de b√∫squeda
      [searchContainer, searchContainerDesktop, searchContainerMobile].forEach(container => {
        if (container) container.classList.remove('active');
      });
      searchToggle.classList.remove('active');
      searchToggle.setAttribute('aria-expanded', 'false');
    }
  });

  // Funcionalidad de b√∫squeda b√°sica (simulada) - MEJORADA
  function performSearch(query, inputElement) {
    console.log('üîç Search query:', query);
    const resultsContainer = document.getElementById('search-results');
    const resultsContainerMobile = document.getElementById('search-results-mobile');
    
    if (query.length > 2) {
      console.log('üéØ Showing search results for:', query);
      const resultsHTML = `
        <div class="search-result-item">
          <strong>Resultados para:</strong> "${query}"
        </div>
        <div class="search-result-item">Virginia Ram√≠rez</div>
        <div class="search-result-item">Sinfon√≠a Digital</div>
        <div class="search-result-item">NFT Musical</div>
        <div class="search-result-item">M√∫sicos Cl√°sicos</div>
        <div class="search-result-item">√Ålbumes Digitales</div>
      `;
      
      // Mostrar resultados en ambos contenedores
      if (resultsContainer) {
        resultsContainer.innerHTML = resultsHTML;
        resultsContainer.style.display = 'block';
      }
      if (resultsContainerMobile) {
        resultsContainerMobile.innerHTML = resultsHTML;
        resultsContainerMobile.style.display = 'block';
      }
    } else {
      // Ocultar resultados en ambos contenedores
      [resultsContainer, resultsContainerMobile].forEach(container => {
        if (container) container.style.display = 'none';
      });
    }
  }

  // Sincronizar ambas b√∫squedas
  function syncSearchInputs(source, target) {
    target.value = source.value;
  }

  if (searchInputDesktop && searchInputMobile) {
    searchInputDesktop.addEventListener('input', (e) => {
      syncSearchInputs(e.target, searchInputMobile);
      performSearch(e.target.value.trim(), e.target);
    });
    
    searchInputMobile.addEventListener('input', (e) => {
      syncSearchInputs(e.target, searchInputDesktop);
      performSearch(e.target.value.trim(), e.target);
    });
  }
  
  // Tambi√©n manejar el input √∫nico para compatibilidad
  if (searchInput && !searchInputDesktop) {
    searchInput.addEventListener('input', (e) => {
      performSearch(e.target.value.trim(), e.target);
    });
  }

  // Manejar escape para cerrar modales
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      // Cerrar men√∫ hamburguesa
      if (navMenu && navMenu.classList.contains('active')) {
        navToggle.setAttribute('aria-expanded', 'false');
        navMenu.classList.remove('active');
        navToggle.classList.remove('active');
        document.body.style.overflow = '';
      }
      
      // Cerrar b√∫squeda (ambos contenedores)
      [searchContainer, searchContainerDesktop, searchContainerMobile].forEach(container => {
        if (container && container.classList.contains('active')) {
          container.classList.remove('active');
        }
      });
      searchToggle.classList.remove('active');
      searchToggle.setAttribute('aria-expanded', 'false');
      
      // Cerrar dropdowns m√≥viles
      dropdowns.forEach(dropdown => {
        dropdown.classList.remove('mobile-open');
      });
    }
  });
  
  // Debug: Log de inicializaci√≥n
  console.log('‚úÖ Header script initialization complete');
  console.log('üîß Elements found:', {
    navToggle: !!navToggle,
    navMenu: !!navMenu,
    searchToggle: !!searchToggle,
    searchContainerDesktop: !!searchContainerDesktop,
    searchContainerMobile: !!searchContainerMobile,
    searchInputDesktop: !!searchInputDesktop,
    searchInputMobile: !!searchInputMobile
  });
</script>